# Productor-Consumidor en Java

Este proyecto implementa el clásico problema del productor-consumidor utilizando semáforos en Java. La solución permite que múltiples productores generen elementos y los coloquen en un buffer compartido, mientras que varios consumidores extraen esos elementos para su procesamiento. El buffer tiene un tamaño limitado, lo que requiere un control adecuado del acceso concurrente.

## Contenido

- **Buffer**: Clase que representa el buffer compartido y gestiona la inserción y extracción de elementos.
- **Productor**: Clase que simula un productor que genera números aleatorios y los coloca en el buffer.
- **Consumidor**: Clase que simula un consumidor que extrae números del buffer y los procesa.
- **ProductorConsumidor**: Clase principal que inicializa el sistema y arranca los hilos de productores y consumidores.


### Explicación de la Salida

1. **Producto añadido: [Número]**: Indica que un productor ha generado un nuevo número (por ejemplo, 42) y lo ha añadido al buffer.
2. **Estado del buffer**: Muestra la representación actual del buffer:
   - `[*]`: Indica la posición donde se insertará el próximo producto.
   - `[x]`: Muestra la posición del próximo producto que será consumido.
   - Números: Representan los productos actualmente en el buffer.
   - `~`: Indica espacios vacíos en el buffer.
3. **Producto consumido: [Número]**: Indica que un consumidor ha extraído un número del buffer (por ejemplo, 42).

Este ciclo de producción y consumo continuará indefinidamente, mostrando el estado actualizado del buffer en cada paso.

## Consideraciones

- El tamaño del buffer está definido en el código (actualmente 10), pero se puede ajustar en la clase `ProductorConsumidor`.
- Puedes modificar el número de hilos de productores y consumidores para observar cómo afecta al rendimiento.
